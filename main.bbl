\begin{thebibliography}{10}

\bibitem{pacman_complete}
\url{https://twitter.com/folone/status/494017847585415168}.
\newblock A twitter message with a quote from Edwin Brady.

\bibitem{atom_site}
{A}tom.
\newblock \url{https://atom.io/}.
\newblock Atom website. Atom is ``[a] hackable text editor for the 21st
  Century''.

\bibitem{blueprint}
{B}lueprints {V}isual {S}cripting.
\newblock \url{https://docs.unrealengine.com/latest/INT/Engine/Blueprints/}.
\newblock From Unreal Engine 4 Documentation.

\bibitem{brackets_site}
{B}rackets - {A} modern, open source code editor that understands web design.
\newblock \url{http://brackets.io/}.
\newblock Brackets website.

\bibitem{codemirror_site}
{C}ode{M}irror.
\newblock \url{http://codemirror.net/}.
\newblock CodeMirror website. ``CodeMirror is a versatile text editor
  implemented in JavaScript for the browser.''.

\bibitem{js_text_editors_wikipedia}
{C}omparison of {J}ava{S}cript-based source code editors.
\newblock
  \url{https://en.wikipedia.org/wiki/Comparison_of_JavaScript-based_source_code_editors}.
\newblock Wikipedia comparison article.

\bibitem{mdn_concurrency}
{C}oncurrency model and {E}vent {L}oop.
\newblock
  \url{https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop}.
\newblock An article from Mozilla Developer Network
  (\url{https://developer.mozilla.org}).

\bibitem{idris}
{I}dris | {A} {L}anguage with {D}ependent {T}ypes.
\newblock \url{http://www.idris-lang.org/}.
\newblock Homepage of the Idris programming language.

\bibitem{lisp_powerful}
{L}isp {I}s {T}oo {P}owerful.
\newblock \url{http://c2.com/cgi/wiki?LispIsTooPowerful}.
\newblock An entry from the c2 Wiki: \url{http://c2.com/cgi/wiki}.

\bibitem{lisp_wikipedia}
{L}isp (programming language).
\newblock \url{https://en.wikipedia.org/wiki/Lisp_(programming_language)}.
\newblock Wikipedia definition of Lisp.

\bibitem{unreal_list}
{L}ist of {U}nreal {E}ngine games.
\newblock \url{https://en.wikipedia.org/wiki/List_of_Unreal_Engine_games}.
\newblock ``[A] list of notable games using a version of the Unreal Engine.''
  From Wikipedia.

\bibitem{unreal_guinness}
{M}ost successful videogame engine.
\newblock
  \url{http://www.guinnessworldrecords.com/world-records/most-successful-game-engine}.
\newblock From Guinness World Records webpage. Record as of 16 July 2014.

\bibitem{nodejs_site}
{N}ode.js.
\newblock \url{https://nodejs.org}.
\newblock Node.js website. ``Node.js® is a JavaScript runtime built on
  Chrome's V8 JavaScript engine.''.

\bibitem{open_web_platform}
{O}pen {W}eb {P}latform.
\newblock \url{https://www.w3.org/wiki/Open_Web_Platform}.
\newblock ``The Open Web Platform is the collection of open (royalty-free)
  technologies which enables the Web.''.

\bibitem{scratch}
{S}cratch.
\newblock \url{https://wiki.scratch.mit.edu/wiki/Scratch}.
\newblock Description of the language from the Scratch Wiki. See also the
  language's homepage: \url{https://scratch.mit.edu/}.

\bibitem{scratch_wikipedia}
{S}cratch (programming language).
\newblock \url{https://en.wikipedia.org/wiki/Scratch_(programming_language)}.
\newblock Wikipedia definition of Scratch.

\bibitem{so_developer_survey_2016}
{S}tack {O}verflow {D}eveloper {S}urvey 2016 {R}esults.
\newblock \url{http://stackoverflow.com/research/developer-survey-2016}.
\newblock Stack Overflow's annual developer survey. ``[T]he most comprehensive
  developer survey ever conducted.''.

\bibitem{redmonk}
{T}he {R}ed{M}onk {P}rogramming {L}anguage {R}ankings: {J}anuary 2016 –
  tecosystems.
\newblock \url{http://redmonk.com/sogrady/2016/02/19/language-rankings-1-16/}.
\newblock A ranking of programming languages by popularity. ``[C]correlates
  language discussion (Stack Overflow) and usage (GitHub)[.]''.

\bibitem{web_platform}
{T}he {W}eb platform: {B}rowser technologies.
\newblock \url{https://platform.html5.org/}.
\newblock A list of browser technologies that are the components of the
  platform with links to their specifications.

\bibitem{vpl_wikipedia}
{V}isual programming language.
\newblock \url{https://en.wikipedia.org/wiki/Visual_programming_language}.
\newblock Wikipedia definition of a visual programming language.

\bibitem{vscode_site}
{V}isual {S}tudio {C}ode - {C}ode {E}diting. {R}edefined.
\newblock \url{https://code.visualstudio.com/}.
\newblock Visual Studio Code website.

\bibitem{ecmascript}
{ECMAS}cript® 2016 {L}anguage {S}pecification.
\newblock \url{http://www.ecma-international.org/ecma-262/7.0/index.html}, June
  2016.

\bibitem{lisp_expressive}
Donnie Berkholz.
\newblock {P}rogramming languages ranked by expressiveness.
\newblock
  \url{http://redmonk.com/dberkholz/2013/03/25/programming-languages-ranked-by-expressiveness/},
  March 2013.
\newblock A blog post by a RedMonk (A ``developer focused industry analyst
  firm.'') analyst.

\bibitem{visual_languages}
Margaret~M. Burnett.
\newblock {V}isual {L}anguage {R}esearch {B}ibliography.
\newblock \url{http://web.engr.oregonstate.edu/~burnett/vpl.html}.
\newblock ``This page is a structured bibliography of papers pertaining to
  visual language (VL) research.''. From Oregon State University.

\bibitem{syntaxation}
Douglas Crockford.
\newblock {S}yntaxation.
\newblock
  \url{gotocon.com/dl/goto-aar-2013/slides/DouglasCrockford_Syntaxation.pdf},
  September 2013.
\newblock Presentation from the 2013 edition of the ``goto'' conference,
  \url{http://gotocon.com/aarhus-2013/}.

\bibitem{vpl_maturity}
Rémi Dehouck.
\newblock {T}he maturity of visual programming.
\newblock \url{http://www.craft.ai/blog/the-maturity-of-visual-programming/},
  September 2015.
\newblock A blog post.

\bibitem{sicp_meta}
Julie~Sussman Harold~Abelson, Gerald Jay~Sussman.
\newblock {T}he {M}etacircular {E}valuator.
\newblock In {\em {S}tructure and {I}nterpretation of {C}omputer {P}rograms},
  chapter 4.1. MIT Press, 1996.
\newblock Also available online: \url{https://mitpress.mit.edu/sicp/}.

\bibitem{snapshots}
Eric Hosick.
\newblock {V}isual {P}rogramming {L}anguages - {S}napshots.
\newblock
  \url{http://blog.interfacevision.com/design/design-visual-progarmming-languages-snapshots/},
  2014.

\bibitem{lisp_simple}
Nicholas H.Tollervey.
\newblock {L}isp ~ {C}oncise and {S}imple.
\newblock \url{http://ntoll.org/article/lisp-concise-and-simple}, March 2013.
\newblock An article from the author's personal website:
  \url{http://ntoll.org/}.

\bibitem{lisp_draft}
John McCarthy.
\newblock {H}istory of {L}isp.
\newblock \url{http://www-formal.stanford.edu/jmc/history/lisp/lisp.html},
  February 1979.
\newblock A draft.

\bibitem{macros}
Matt Might.
\newblock {F}irst-class (run-time) macros and meta-circular evaluation.
\newblock
  \url{http://matt.might.net/articles/metacircular-evaluation-and-first-class-run-time-macros/}.

\bibitem{unreal_script}
Christian Nutt.
\newblock {E}pic's {T}im {S}weeney lays out the case for {U}nreal {E}ngine 4.
\newblock
  \url{http://www.gamasutra.com/view/news/213647/Epics_Tim_Sweeney_lays_out_the_case_for_Unreal_Engine_4.php},
  March 2014.
\newblock An article from the Gamasutra website.

\bibitem{wadler_critique}
Philip Wadler.
\newblock {A} critique of {A}belson and {S}ussman or why calculating is better
  than scheming.
\newblock {\em SIGPLAN Notices}, 22(3):83--94, March 1987.
\newblock Available online:
  \url{https://www.cs.kent.ac.uk/people/staff/dat/miranda/wadler87.pdf}.

\end{thebibliography}
